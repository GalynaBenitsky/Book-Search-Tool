{"version":3,"sources":["apias/openLibrary.js","components/Book.js","components/BookList.js","components/Search.js","App.js","index.js"],"names":["get","uri","params","a","url","stringify","fetch","cache","headers","Accept","response","json","openLibrary","title","Book","book","author_name","first_publish_year","key","cover_i","className","href","BookList","loading","books","count","sort","Spinner","animation","variant","length","map","Search","query","onQueryChange","onSearch","onSubmit","name","type","defaultValue","onChange","placeholder","App","state","isFetching","numFound","e","preventDefault","setState","user","result","docs","value","target","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAIMA,EAAG,uCAAG,WAAOC,EAAKC,GAAZ,iBAAAC,EAAA,6DACJC,EADI,UAFK,0BAEL,OACgBH,EADhB,YACuBI,oBAAUH,IADjC,SAGaI,MAAMF,EAAK,CAChCG,MAAO,WACPC,QAAS,CACPC,OAAQ,sBANF,cAGJC,EAHI,gBAUGA,EAASC,OAVZ,mFAAH,wDAaIC,EAAc,SAACC,GAAD,OAAWb,EAAI,eAAgB,CAAEa,W,eCI7CC,EAnBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNF,EAAyDE,EAAzDF,MAAOG,EAAkDD,EAAlDC,YAAaC,EAAqCF,EAArCE,mBAA6BC,GAAQH,EAAjBI,QAAiBJ,EAARG,KAEzD,OACE,qBAAKE,UAAU,OAAf,SACE,sBAAKA,UAAU,+BAAf,UAEE,oBAAIA,UAAU,aAAd,SACE,iCAASP,MAEVG,EACD,oBAAGI,UAAU,YAAb,8BAA2CH,KAC3C,wBAAQG,UAAU,0BAAlB,SACE,mBAAGC,KAAI,iCAA4BH,GAAnC,0CCSKI,EApBE,SAAC,GAA8D,IAAD,IAA3DC,eAA2D,aAA1CC,aAA0C,MAAlC,GAAkC,MAA9BC,aAA8B,MAAtB,EAAsB,IAAnBC,KAC1D,OACE,gCACGH,GACC,cAACI,EAAA,EAAD,CAASP,UAAU,UAAUQ,UAAU,SAASC,QAAQ,cAEzDL,EAAMM,OAAS,GACd,oBAAGV,UAAU,WAAb,qBACU,iCAASI,EAAMM,SADzB,OAC6C,iCAASL,IAAgB,IADtE,YAKF,qBAAKL,UAAU,iBAAf,SACGI,EAAMO,KAAI,SAAChB,GACV,OAAO,cAAC,EAAD,CAAqBA,KAAMA,GAAhBA,EAAKG,cCKlBc,EArBA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SACtC,OACE,qBAAKf,UAAU,YAAf,SACE,uBAAMA,UAAU,cAAcgB,SAAUD,EAAxC,UACE,uBACEE,KAAK,QACLjB,UAAU,aACVkB,KAAK,OACLC,aAAcN,EACdO,SAAUN,EACVO,YAAY,WAGd,wBAAQH,KAAK,SAASlB,UAAU,MAAhC,qCC0BOsB,E,4MAlCbC,MAAQ,CAAEnB,MAAO,GAAIoB,YAAY,EAAOX,MAAO,GAAIY,SAAU,G,EAE7DV,S,uCAAW,WAAOW,GAAP,uBAAA3C,EAAA,6DACT2C,EAAEC,iBACF,EAAKC,SAAS,CAAEJ,YAAY,EAAMpB,MAAO,KAFhC,SAGYyB,EAAiB,EAAKN,MAAMV,OAHxC,OAGHiB,EAHG,SAI2BA,EAA5BC,YAJC,MAIM,GAJN,IAI2BD,EAAjBL,gBAJV,MAIqB,EAJrB,EAKT,EAAKG,SAAS,CAAExB,MAAO2B,EAAMP,YAAY,EAAOC,aALvC,2C,wDAQXX,cAAgB,YAA4B,IAAfkB,EAAc,EAAxBC,OAAUD,MAC3B,EAAKJ,SAAS,CAAEf,MAAOmB,K,4CAGzB,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,oBAAIA,UAAU,0BAAd,8BAEA,cAAC,EAAD,CACEc,cAAeoB,KAAKpB,cACpBC,SAAUmB,KAAKnB,SACfF,MAAOqB,KAAKX,MAAMV,QAEpB,cAAC,EAAD,CACEV,QAAS+B,KAAKX,MAAMC,WACpBpB,MAAO8B,KAAKX,MAAMnB,MAClBC,MAAO6B,KAAKX,MAAME,kB,GA5BVU,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5355a55.chunk.js","sourcesContent":["import { stringify } from \"query-string\";\n\nconst BASE_URL = \"http://openlibrary.org\";\n\nconst get = async (uri, params) => {\n  const url = `${BASE_URL}${uri}?${stringify(params)}`;\n\n  const response = await fetch(url, {\n    cache: \"no-cache\",\n    headers: {\n      Accept: \"application/json\",\n    },\n  });\n\n  return await response.json();\n};\n\nexport const openLibrary = (title) => get(\"/search.json\", { title });\n","import React from \"react\";\n\nconst Book = ({ book }) => {\n  const { title, author_name, first_publish_year, cover_i, key } = book;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body d-flex flex-column\">\n        {/* <img src={cover_i} alt={title} /> */}\n        <h5 className=\"card-title\">\n          <strong>{title}</strong>\n        </h5>\n        {author_name}\n        <p className=\"card-text\">First published: {first_publish_year}</p>\n        <button className=\"btn btn-primary mt-auto\">\n          <a href={`https://openlibrary.org${key}`}>Show at Open Library</a>\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Book;\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Book from \"./Book\";\n\nconst BookList = ({ loading = false, books = [], count = 0, sort = \"asc\" }) => {\n  return (\n    <div>\n      {loading && (\n        <Spinner className=\"spinner\" animation=\"border\" variant=\"secondary\" />\n      )}\n      {books.length > 0 && (\n        <p className=\"subtitle\">\n          Showing <strong>{books.length}</strong> of <strong>{count}</strong>{\" \"}\n          books.\n        </p>\n      )}\n      <div className=\"grid-container\">\n        {books.map((book) => {\n          return <Book key={book.key} book={book} />;\n        })}\n      </div>\n    </div>\n  );\n};\nexport default BookList;\n","import React from \"react\";\n\nconst Search = ({ query, onQueryChange, onSearch }) => {\n  return (\n    <div className=\"container\">\n      <form className=\"book-search\" onSubmit={onSearch}>\n        <input\n          name=\"title\"\n          className=\"book-input\"\n          type=\"text\"\n          defaultValue={query}\n          onChange={onQueryChange}\n          placeholder=\"Search\"\n        />\n\n        <button type=\"submit\" className=\"btn\">\n          Let's find a Book\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as user from \"./apias/openLibrary\";\nimport BooksList from \"./components/BookList\";\nimport Search from \"./components/Search.js\";\n\nclass App extends Component {\n  state = { books: [], isFetching: false, query: \"\", numFound: 0 };\n\n  onSearch = async (e) => {\n    e.preventDefault();\n    this.setState({ isFetching: true, books: [] });\n    const result = await user.openLibrary(this.state.query);\n    const { docs = [], numFound = 0 } = result;\n    this.setState({ books: docs, isFetching: false, numFound });\n  };\n\n  onQueryChange = ({ target: { value } }) => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"title has-text-centered\">Book Search Tool</h1>\n\n        <Search\n          onQueryChange={this.onQueryChange}\n          onSearch={this.onSearch}\n          query={this.state.query}\n        />\n        <BooksList\n          loading={this.state.isFetching}\n          books={this.state.books}\n          count={this.state.numFound}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}